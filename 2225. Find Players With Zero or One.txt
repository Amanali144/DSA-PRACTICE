2225. Find Players With Zero or One Losses

You are given an integer array matches where matches[i] = [winneri, loseri] indicates that the player winneri defeated player loseri in a match.

Return a list answer of size 2 where:

answer[0] is a list of all players that have not lost any matches.
answer[1] is a list of all players that have lost exactly one match.
The values in the two lists should be returned in increasing order.




class Solution {
public:
    vector<vector<int>> findWinners(vector<vector<int>>& matches) {
        unordered_map<int , int> lost_map; //key:player ka no , value : count o 
        for( int i =0 ; i< matches.size() ; i++)
        {
            int loser = matches[i][1];
            lost_map[loser]++;
        }

        vector<int> notLost;
        vector<int> lostOnce;

        for(int i = 0 ; i<matches.size() ; i++)
        {
            int loser = matches[i][1];
            int winner = matches[i][0];

            if(lost_map.find(winner) == lost_map.end()){
                notLost.push_back(winner);
                lost_map[winner] = 2;
            }

            if(lost_map[loser] == 1){
                lostOnce.push_back(loser);
            }
        }

        sort(begin (lostOnce) , end(lostOnce));
        sort(begin (notLost) , end(notLost));

        return {notLost , lostOnce};
    }
};